{"version":3,"sources":["components/Text/style.js","components/Text/Text.js","constant.js","components/Button/Button.js","components/RadioButtonsGroup/style.js","components/RadioButtonsGroup/RadioButtonsGroup.js","components/NewGame/style.js","components/NewGame/NewGame.js","components/Question/style.js","components/Question/Question.js","pages/Home/style.js","pages/Home/Home.js","hooks/useQuestionsFetch.js","theme/ThemeProvider.js","AppRouter.js","index.js"],"names":["Text","styled","div","size","bold","children","underline","Typography","SIZE","VARIANT","COLORS","Button","label","color","C","disabled","variant","onClick","style","textTransform","RadioButtonsGroup","onChange","value","radioButtons","FormControl","RadioGroup","row","name","defaultValue","event","target","map","button","FormControlLabel","control","Radio","Header","NewGame","setCurrentQuestion","score","setScore","setStartQuiz","endQuiz","setEndQuiz","numberOfQuestions","setNumberOfQuestions","difficulty","setDifficulty","useWindowSize","width","height","setTimeout","Question","Answers","question","answers","correctAnswer","currentQuestion","useState","timeLeft","setTimeLeft","nextQuestion","useEffect","toast","warn","position","autoClose","closeOnClick","pauseOnHover","intervalId","setInterval","clearInterval","answer","success","currentScore","error","handleClick","Home","Content","startQuiz","questions","setQuestions","fetchQuestions","a","url","difficultyUrl","axios","get","concat","response","data","results","useQuestionsFetch","length","decode","correct_answer","incorrectAnswers","incorrect_answers","forEach","index","correctIndex","Math","floor","random","tmp","hideProgressBar","ThemeProvider","overrides","MuiTab","root","backgroundColor","theme","React","useMemo","createTheme","palette","type","primary","main","CssBaseline","AppRouter","exact","path","component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.915d53c8.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Text = styled.div`\r\n  font-size: ${({ size }) => size};\r\n  font-weight: ${({ bold }) => (bold ? \"700\" : \"400\")};\r\n`;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport * as S from \"./style\";\r\n\r\nconst Text = ({ size = \"14px\", children, bold, underline }) => {\r\n  return (\r\n    <Typography>\r\n      <S.Text size={size} bold={bold} underline={underline}>\r\n        {children}\r\n      </S.Text>\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default Text;\r\n","export const SIZE = {\r\n  small: \"small\",\r\n  medium: \"medium\",\r\n  large: \"large\",\r\n};\r\n\r\nexport const VARIANT = {\r\n  text: \"text\",\r\n  filled: \"filled\",\r\n  outlined: \"outlined\",\r\n  standard: \"standard\",\r\n  contained: \"contained\",\r\n};\r\n\r\nexport const COLORS = {\r\n  default: \"default\",\r\n  inherit: \"inherit\",\r\n  primary: \"primary\",\r\n  secondary: \"secondary\",\r\n};\r\n","import React from \"react\";\r\nimport { Button as MuiButton } from \"@material-ui/core\";\r\nimport * as C from \"../../constant\";\r\n\r\nconst Button = ({\r\n  label,\r\n  color = C.COLORS.default,\r\n  disabled,\r\n  size = C.SIZE.medium,\r\n  variant = C.VARIANT.standard,\r\n  onClick,\r\n}) => {\r\n  return (\r\n    <MuiButton\r\n      onClick={onClick}\r\n      color={color}\r\n      disabled={disabled}\r\n      size={size}\r\n      variant={variant}\r\n      style={{ textTransform: \"none\" }}\r\n    >\r\n      {label}\r\n    </MuiButton>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import styled from \"styled-components\";\r\n\r\nexport const RadioButtonsGroup = styled.div``;\r\n","import React from \"react\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport * as S from \"./style\";\r\n\r\nconst RadioButtonsGroup = ({ onChange, value, radioButtons }) => {\r\n  const handleChange = (event) => {\r\n    onChange && onChange(event.target.value);\r\n  };\r\n  return (\r\n    <S.RadioButtonsGroup>\r\n      <FormControl>\r\n        <RadioGroup\r\n          row\r\n          aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n          name=\"controlled-radio-buttons-group\"\r\n          defaultValue={value}\r\n          onChange={handleChange}\r\n        >\r\n          {radioButtons.map((button) => {\r\n            return (\r\n              <FormControlLabel\r\n                key={button.value}\r\n                value={button.value}\r\n                control={<Radio color=\"primary\" />}\r\n                label={button.label}\r\n              />\r\n            );\r\n          })}\r\n        </RadioGroup>\r\n      </FormControl>\r\n    </S.RadioButtonsGroup>\r\n  );\r\n};\r\n\r\nexport default RadioButtonsGroup;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 20px;\r\n`;\r\n\r\nexport const NewGame = styled.div`\r\n  flex-direction: column;\r\n  width: 1000px;\r\n  text-align: center;\r\n`;\r\n\r\nexport const RadioButtonsGroup = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const Button = styled.div`\r\n  justify-content: center;\r\n  margin: 10px;\r\n  flex-direction: column;\r\n`;\r\n","import React from \"react\";\r\nimport Confetti from \"react-confetti\";\r\nimport useWindowSize from \"react-use/lib/useWindowSize\";\r\nimport Text from \"../Text\";\r\nimport Button from \"../Button\";\r\nimport RadioButtonsGroup from \"../RadioButtonsGroup\";\r\nimport * as S from \"./style\";\r\n\r\nconst NewGame = ({\r\n  setCurrentQuestion,\r\n  score,\r\n  setScore,\r\n  setStartQuiz,\r\n  endQuiz,\r\n  setEndQuiz,\r\n  numberOfQuestions,\r\n  setNumberOfQuestions,\r\n  difficulty,\r\n  setDifficulty,\r\n}) => {\r\n  const { width, height } = useWindowSize();\r\n  const questionsRadio = [\r\n    { value: \"5\", label: \"5\" },\r\n    { value: \"10\", label: \"10\" },\r\n    { value: \"25\", label: \"25\" },\r\n    { value: \"50\", label: \"50\" },\r\n  ];\r\n  const difficultyRadio = [\r\n    { value: \"mixed\", label: \"Mixed\" },\r\n    { value: \"easy\", label: \"Easy\" },\r\n    { value: \"medium\", label: \"Medium\" },\r\n    { value: \"hard\", label: \"Hard\" },\r\n  ];\r\n\r\n  const render = () => {\r\n    if (endQuiz) {\r\n      return (\r\n        <div>\r\n          <Confetti width={width} height={height} />\r\n          <Text size=\"30px\" bold>\r\n            You answered {score} questions out of {numberOfQuestions} correctly!\r\n          </Text>\r\n          <Text size=\"30px\" bold>\r\n            {score / numberOfQuestions > 0.5\r\n              ? \"Great Job!\"\r\n              : \"Better Luck Next Time...\"}\r\n          </Text>\r\n        </div>\r\n      );\r\n    } else\r\n      return (\r\n        <Text size=\"30px\" bold>\r\n          Welcome!\r\n        </Text>\r\n      );\r\n  };\r\n\r\n  return (\r\n    <S.NewGame>\r\n      <S.Header>{render()}</S.Header>\r\n      <Text size=\"16px\">Number of Questions:</Text>\r\n      <S.RadioButtonsGroup>\r\n        <RadioButtonsGroup\r\n          onChange={setNumberOfQuestions}\r\n          value={numberOfQuestions}\r\n          radioButtons={questionsRadio}\r\n        />\r\n      </S.RadioButtonsGroup>\r\n      <Text size=\"16px\">Difficulty:</Text>\r\n      <S.RadioButtonsGroup>\r\n        <RadioButtonsGroup\r\n          onChange={setDifficulty}\r\n          value={difficulty}\r\n          radioButtons={difficultyRadio}\r\n        />\r\n      </S.RadioButtonsGroup>\r\n      <S.Button>\r\n        <Button\r\n          label=\"Start Game\"\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            setStartQuiz(true);\r\n            setScore(0);\r\n            setTimeout(() => {\r\n              setCurrentQuestion(0);\r\n              setEndQuiz(false);\r\n            }, 500);\r\n          }}\r\n        />\r\n      </S.Button>\r\n    </S.NewGame>\r\n  );\r\n};\r\n\r\nexport default NewGame;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 20px;\r\n`;\r\n\r\nexport const Question = styled.div`\r\n  flex-direction: column;\r\n  width: 1000px;\r\n  text-align: center;\r\n`;\r\n\r\nexport const Answers = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Button = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 10px;\r\n  flex-direction: column;\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport Text from \"../Text\";\r\nimport Button from \"../Button\";\r\nimport * as S from \"./style\";\r\n\r\nconst Question = ({\r\n  numberOfQuestions,\r\n  question,\r\n  answers,\r\n  correctAnswer,\r\n  currentQuestion,\r\n  setCurrentQuestion,\r\n  score,\r\n  setScore,\r\n  setStartQuiz,\r\n  setEndQuiz,\r\n}) => {\r\n  const [timeLeft, setTimeLeft] = useState(20);\r\n\r\n  const nextQuestion = () => {\r\n    setTimeout(() => {\r\n      if (currentQuestion === numberOfQuestions - 1) {\r\n        setStartQuiz(false);\r\n        setEndQuiz(true);\r\n      }\r\n      setCurrentQuestion((currentQuestion) => currentQuestion + 1);\r\n      setTimeLeft(20);\r\n    }, 750);\r\n  };\r\n\r\n  const handleClick = (answer) => {\r\n    if (answer === correctAnswer) {\r\n      toast.success(\"Correct answer!\", {\r\n        position: \"top-left\",\r\n        autoClose: 1000,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n      });\r\n      setScore((currentScore) => currentScore + 1);\r\n    } else {\r\n      toast.error(`Incorrect answer, Correct answer is ${correctAnswer}`, {\r\n        position: \"top-left\",\r\n        autoClose: 1000,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n      });\r\n    }\r\n\r\n    nextQuestion();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (timeLeft === 0) {\r\n      toast.warn(`Time is up, Correct answer is ${correctAnswer}`, {\r\n        position: \"top-left\",\r\n        autoClose: 1000,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n      });\r\n      nextQuestion();\r\n    }\r\n\r\n    if (!timeLeft) return;\r\n\r\n    const intervalId = setInterval(() => {\r\n      setTimeLeft(timeLeft - 1);\r\n    }, 1000);\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, [timeLeft]);\r\n\r\n  return (\r\n    <S.Question>\r\n      <Text size=\"16px\">Score: {score}</Text>\r\n      <Text size=\"16px\">Time: {timeLeft}</Text>\r\n      <S.Header>\r\n        <Text size=\"24px\" bold>\r\n          {question}\r\n        </Text>\r\n      </S.Header>\r\n      <S.Answers>\r\n        {answers.map((answer) => {\r\n          return (\r\n            <S.Button>\r\n              <Button\r\n                label={answer}\r\n                variant=\"outlined\"\r\n                onClick={() => handleClick(answer)}\r\n              />\r\n            </S.Button>\r\n          );\r\n        })}\r\n      </S.Answers>\r\n    </S.Question>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Home = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { decode } from \"he\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Text from \"../../components/Text\";\r\nimport NewGame from \"../../components/NewGame\";\r\nimport Question from \"../../components/Question\";\r\nimport { useQuestionsFetch } from \"../../hooks\";\r\nimport * as S from \"./style\";\r\n\r\nconst Home = () => {\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [startQuiz, setStartQuiz] = useState(false);\r\n  const [endQuiz, setEndQuiz] = useState(false);\r\n  const [numberOfQuestions, setNumberOfQuestions] = useState(\"5\");\r\n  const [difficulty, setDifficulty] = useState(\"mixed\");\r\n\r\n  const { questions } = useQuestionsFetch(\r\n    startQuiz,\r\n    numberOfQuestions,\r\n    difficulty\r\n  );\r\n\r\n  let question = \"\",\r\n    answers = [],\r\n    correctAnswer = \"\";\r\n\r\n  if (questions.length > 0 && currentQuestion < questions.length) {\r\n    question = decode(questions[currentQuestion]?.question);\r\n    correctAnswer = decode(questions[currentQuestion]?.correct_answer);\r\n    let incorrectAnswers = questions[currentQuestion]?.incorrect_answers;\r\n    incorrectAnswers.forEach((answer, index) => {\r\n      incorrectAnswers[index] = decode(answer);\r\n    });\r\n    answers = [correctAnswer, ...incorrectAnswers];\r\n\r\n    let correctIndex = Math.floor(Math.random() * answers.length);\r\n    let tmp = answers[correctIndex];\r\n    answers[correctIndex] = answers[0];\r\n    answers[0] = tmp;\r\n  }\r\n\r\n  const render = () => {\r\n    if (startQuiz) {\r\n      return (\r\n        <Question\r\n          numberOfQuestions={questions.length}\r\n          question={question}\r\n          answers={answers}\r\n          correctAnswer={correctAnswer}\r\n          currentQuestion={currentQuestion}\r\n          setCurrentQuestion={setCurrentQuestion}\r\n          score={score}\r\n          setScore={setScore}\r\n          setStartQuiz={setStartQuiz}\r\n          setEndQuiz={setEndQuiz}\r\n        />\r\n      );\r\n    } else\r\n      return (\r\n        <NewGame\r\n          setCurrentQuestion={setCurrentQuestion}\r\n          score={score}\r\n          setScore={setScore}\r\n          setStartQuiz={setStartQuiz}\r\n          endQuiz={endQuiz}\r\n          setEndQuiz={setEndQuiz}\r\n          numberOfQuestions={numberOfQuestions}\r\n          setNumberOfQuestions={setNumberOfQuestions}\r\n          difficulty={difficulty}\r\n          setDifficulty={setDifficulty}\r\n        />\r\n      );\r\n  };\r\n\r\n  return (\r\n    <S.Home>\r\n      <S.Content>\r\n        <S.Header>\r\n          <ToastContainer hideProgressBar={true} />\r\n          <Text size=\"64px\" bold>\r\n            Online Quiz Game\r\n          </Text>\r\n        </S.Header>\r\n        {render()}\r\n      </S.Content>\r\n    </S.Home>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const useQuestionsFetch = (startQuiz, numberOfQuestions, difficulty) => {\r\n  const [questions, setQuestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (startQuiz) fetchQuestions();\r\n  }, [startQuiz]);\r\n\r\n  async function fetchQuestions() {\r\n    let url = `https://opentdb.com/api.php?amount=${numberOfQuestions}`;\r\n    let difficultyUrl =\r\n      difficulty !== \"mixed\" ? `&difficulty=${difficulty}` : \"\";\r\n    const response = await axios.get(url.concat(difficultyUrl));\r\n    setQuestions(response.data.results);\r\n  }\r\n\r\n  return { questions, fetchQuestions };\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  createTheme,\r\n  ThemeProvider as Provider,\r\n} from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const overrides = {\r\n    MuiTab: {\r\n      root: {\r\n        backgroundColor: \"#303030\",\r\n      },\r\n    },\r\n  };\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createTheme({\r\n        overrides,\r\n        palette: {\r\n          type: \"dark\",\r\n          primary: {\r\n            main: \"#84ffff\",\r\n          },\r\n          error: {\r\n            main: \"#f06292\",\r\n          },\r\n        },\r\n      }),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Provider theme={theme}>\r\n      <CssBaseline />\r\n      {children}\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeProvider;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Home } from \"./pages\";\r\nimport { ThemeProvider } from \"./theme\";\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <ThemeProvider>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n        </Switch>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport AppRouter from \"./AppRouter\";\r\n\r\nReactDOM.render(<AppRouter />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}