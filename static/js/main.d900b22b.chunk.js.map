{"version":3,"sources":["components/Text/style.js","components/Text/Text.js","constant.js","components/Button/Button.js","components/Question/style.js","components/Question/Question.js","components/NewGame/style.js","components/NewGame/NewGame.js","pages/Home/style.js","pages/Home/Home.js","hooks/useQuestionsFetch.js","theme/ThemeProvider.js","AppRouter.js","index.js"],"names":["Text","styled","div","size","bold","children","Typography","SIZE","VARIANT","COLORS","Button","label","color","C","disabled","variant","onClick","Header","Question","Answers","currentQuestion","question","answers","numberOfQuestions","correctAnswer","setCurrentQuestion","score","setScore","setStartQuiz","setEndQuiz","useState","timeLeft","setTimeLeft","nextQuestion","setTimeout","useEffect","toast","warn","position","autoClose","closeOnClick","pauseOnHover","intervalId","setInterval","clearInterval","hideProgressBar","decode","map","answer","success","currentScore","error","console","log","handleClick","NewGame","endQuiz","Home","Content","startQuiz","questions","setQuestions","fetchQuestions","a","axios","get","response","data","results","useQuestionsFetch","length","correct_answer","incorrectAnswers","incorrect_answers","forEach","index","correctIndex","Math","floor","random","tmp","ThemeProvider","overrides","MuiTab","root","backgroundColor","theme","React","useMemo","createTheme","palette","type","primary","main","CssBaseline","AppRouter","exact","path","component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.d900b22b.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Text = styled.div`\r\n  font-size: ${({ size }) => size};\r\n  font-weight: ${({ bold }) => (bold ? \"700\" : \"400\")};\r\n`;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport * as S from \"./style\";\r\n\r\nconst Text = ({ size = \"14px\", children, bold }) => {\r\n  return (\r\n    <Typography>\r\n      <S.Text size={size} bold={bold}>\r\n        {children}\r\n      </S.Text>\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default Text;\r\n","export const SIZE = {\r\n  small: \"small\",\r\n  medium: \"medium\",\r\n  large: \"large\",\r\n};\r\n\r\nexport const VARIANT = {\r\n  text: \"text\",\r\n  filled: \"filled\",\r\n  outlined: \"outlined\",\r\n  standard: \"standard\",\r\n  contained: \"contained\",\r\n};\r\n\r\nexport const COLORS = {\r\n  default: \"default\",\r\n  inherit: \"inherit\",\r\n  primary: \"primary\",\r\n  secondary: \"secondary\",\r\n};\r\n","import React from \"react\";\r\nimport { Button as MuiButton } from \"@material-ui/core\";\r\nimport * as C from \"../../constant\";\r\n\r\nconst Button = ({\r\n  label,\r\n  color = C.COLORS.default,\r\n  disabled,\r\n  size = C.SIZE.medium,\r\n  variant = C.VARIANT.standard,\r\n  onClick,\r\n}) => {\r\n  return (\r\n    <MuiButton\r\n      onClick={onClick}\r\n      color={color}\r\n      disabled={disabled}\r\n      size={size}\r\n      variant={variant}\r\n    >\r\n      {label}\r\n    </MuiButton>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 20px;\r\n`;\r\n\r\nexport const Question = styled.div`\r\n  flex-direction: column;\r\n  width: 1000px;\r\n  text-align: center;\r\n`;\r\n\r\nexport const Answers = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Button = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 10px;\r\n  flex-direction: column;\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Text from \"../Text\";\r\nimport Button from \"../Button\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport * as S from \"./style\";\r\nimport \"./Question.css\";\r\nimport { decode } from \"he\";\r\n\r\nconst Question = ({\r\n  currentQuestion,\r\n  question,\r\n  answers,\r\n  numberOfQuestions,\r\n  correctAnswer,\r\n  setCurrentQuestion,\r\n  score,\r\n  setScore,\r\n  setStartQuiz,\r\n  setEndQuiz,\r\n}) => {\r\n  const [timeLeft, setTimeLeft] = useState(20);\r\n\r\n  const nextQuestion = () => {\r\n    if (currentQuestion === numberOfQuestions - 1) {\r\n      setStartQuiz(false);\r\n      setEndQuiz(true);\r\n    }\r\n\r\n    setTimeout(() => {\r\n      setCurrentQuestion((currentQuestion) => currentQuestion + 1);\r\n      setTimeLeft(20);\r\n    }, 750);\r\n  };\r\n\r\n  const handleClick = (answer) => {\r\n    if (answer === correctAnswer) {\r\n      toast.success(\"Correct answer!\", {\r\n        position: \"top-left\",\r\n        autoClose: 1000,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n      });\r\n      setScore((currentScore) => currentScore + 1);\r\n    } else {\r\n      toast.error(`Incorrect answer, Correct answer is ${correctAnswer}`, {\r\n        position: \"top-left\",\r\n        autoClose: 1000,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n      });\r\n    }\r\n    console.log(\"currentQuestion\", currentQuestion);\r\n    console.log(\"numberOfQuestions\", numberOfQuestions - 1);\r\n\r\n    nextQuestion();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (timeLeft === 0) {\r\n      toast.warn(\"Time is up\", {\r\n        position: \"top-left\",\r\n        autoClose: 1000,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n      });\r\n      nextQuestion();\r\n    }\r\n\r\n    if (!timeLeft) return;\r\n\r\n    const intervalId = setInterval(() => {\r\n      setTimeLeft(timeLeft - 1);\r\n    }, 1000);\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, [timeLeft]);\r\n\r\n  return (\r\n    <S.Question>\r\n      <ToastContainer position=\"top-center\" hideProgressBar={true} />\r\n      <Text size=\"14px\">Score: {score}</Text>\r\n      <Text size=\"14px\">Time: {timeLeft}</Text>\r\n      <S.Header>\r\n        <Text size=\"30px\" bold>\r\n          {decode(question)}\r\n        </Text>\r\n      </S.Header>\r\n      <S.Answers>\r\n        {answers.map((answer) => {\r\n          return (\r\n            <S.Button>\r\n              <Button\r\n                label={decode(answer)}\r\n                variant=\"outlined\"\r\n                onClick={() => handleClick(answer)}\r\n              />\r\n            </S.Button>\r\n          );\r\n        })}\r\n      </S.Answers>\r\n    </S.Question>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 20px;\r\n`;\r\n\r\nexport const NewGame = styled.div`\r\n  flex-direction: column;\r\n  width: 1000px;\r\n  text-align: center;\r\n`;\r\n\r\nexport const Button = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 10px;\r\n  flex-direction: column;\r\n`;\r\n","import React from \"react\";\r\nimport Text from \"../Text\";\r\nimport Button from \"../Button\";\r\nimport * as S from \"./style\";\r\n\r\nconst NewGame = ({\r\n  setStartQuiz,\r\n  setEndQuiz,\r\n  setCurrentQuestion,\r\n  score,\r\n  setScore,\r\n  endQuiz,\r\n}) => {\r\n  const render = () => {\r\n    if (endQuiz) {\r\n      return (\r\n        <div>\r\n          <Text size=\"30px\" bold>\r\n            Your score is {score}\r\n          </Text>\r\n        </div>\r\n      );\r\n    } else\r\n      return (\r\n        <Text size=\"30px\" bold>\r\n          Welcome!\r\n        </Text>\r\n      );\r\n  };\r\n\r\n  return (\r\n    <S.NewGame>\r\n      <S.Header>{render()}</S.Header>\r\n      <S.Button>\r\n        <Button\r\n          label=\"Click to start a new game\"\r\n          variant=\"outlined\"\r\n          onClick={() => {\r\n            setStartQuiz(true);\r\n            setScore(0);\r\n            setTimeout(() => {\r\n              setCurrentQuestion(0);\r\n              setEndQuiz(false);\r\n            }, 500);\r\n          }}\r\n        />\r\n      </S.Button>\r\n    </S.NewGame>\r\n  );\r\n};\r\n\r\nexport default NewGame;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Home = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport Text from \"../../components/Text\";\r\nimport Question from \"../../components/Question\";\r\nimport NewGame from \"../../components/NewGame\";\r\nimport { useQuestionsFetch } from \"../../hooks\";\r\nimport { decode } from \"he\";\r\nimport * as S from \"./style\";\r\n\r\nconst Home = () => {\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [startQuiz, setStartQuiz] = useState(false);\r\n  const [endQuiz, setEndQuiz] = useState(false);\r\n\r\n  const { questions } = useQuestionsFetch(startQuiz);\r\n  let question = \"\",\r\n    answers = [],\r\n    correctAnswer = \"\";\r\n\r\n  if (questions.length > 0 && currentQuestion < questions.length) {\r\n    question = decode(questions[currentQuestion]?.question);\r\n    correctAnswer = questions[currentQuestion]?.correct_answer;\r\n    let incorrectAnswers = questions[currentQuestion]?.incorrect_answers;\r\n    answers = [correctAnswer, ...incorrectAnswers];\r\n    answers.forEach((answer, index) => {\r\n      answers[index] = decode(answer);\r\n    });\r\n    let correctIndex = Math.floor(Math.random() * answers.length);\r\n    let tmp = answers[correctIndex];\r\n    answers[correctIndex] = answers[0];\r\n    answers[0] = tmp;\r\n    console.log(question);\r\n  }\r\n\r\n  console.log(questions);\r\n  const render = () => {\r\n    if (startQuiz) {\r\n      return (\r\n        <Question\r\n          currentQuestion={currentQuestion}\r\n          question={question}\r\n          answers={answers}\r\n          numberOfQuestions={questions.length}\r\n          correctAnswer={correctAnswer}\r\n          setCurrentQuestion={setCurrentQuestion}\r\n          score={score}\r\n          setScore={setScore}\r\n          setStartQuiz={setStartQuiz}\r\n          setEndQuiz={setEndQuiz}\r\n        />\r\n      );\r\n    } else\r\n      return (\r\n        <NewGame\r\n          setStartQuiz={setStartQuiz}\r\n          setEndQuiz={setEndQuiz}\r\n          setCurrentQuestion={setCurrentQuestion}\r\n          score={score}\r\n          setScore={setScore}\r\n          endQuiz={endQuiz}\r\n        />\r\n      );\r\n  };\r\n\r\n  return (\r\n    <S.Home>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            Online Quiz Game\r\n          </Text>\r\n        </S.Header>\r\n        {render()}\r\n      </S.Content>\r\n    </S.Home>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const useQuestionsFetch = (startQuiz) => {\r\n  const [questions, setQuestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (startQuiz) fetchQuestions();\r\n  }, [startQuiz]);\r\n\r\n  async function fetchQuestions() {\r\n    const response = await axios.get(`https://opentdb.com/api.php?amount=10`);\r\n    setQuestions(response.data.results);\r\n  }\r\n\r\n  return { questions, fetchQuestions };\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  createTheme,\r\n  ThemeProvider as Provider,\r\n} from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const overrides = {\r\n    MuiTab: {\r\n      root: {\r\n        backgroundColor: \"#303030\",\r\n      },\r\n    },\r\n  };\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createTheme({\r\n        overrides,\r\n        palette: {\r\n          type: \"dark\",\r\n          primary: {\r\n            main: \"#84ffff\",\r\n          },\r\n          error: {\r\n            main: \"#f06292\",\r\n          },\r\n        },\r\n      }),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Provider theme={theme}>\r\n      <CssBaseline />\r\n      {children}\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeProvider;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Home } from \"./pages\";\r\nimport { ThemeProvider } from \"./theme\";\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <ThemeProvider>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n        </Switch>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport AppRouter from \"./AppRouter\";\r\n\r\nReactDOM.render(<AppRouter />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}